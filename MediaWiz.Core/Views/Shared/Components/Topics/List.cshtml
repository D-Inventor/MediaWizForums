@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using MediaWiz.Forums.Interfaces
@using Umbraco.Extensions
@using MediaWiz.Forums.Helpers
@using Umbraco.Cms.Core.Models.PublishedContent
@inject IViewCounterService _viewCounter
@inject IForumCacheService _cacheService

@{
    int.TryParse(Context.Request.Query["page"], out var pagenum);
    var posts = Model.Children.Where(x => x.IsDocumentType("Forumpost")).ToList();
    var pageSize = Model.HasValue("intPageSize") ? Convert.ToInt32(Model.Value("intPageSize")) : 5;
    var totalPages = (int)Math.Ceiling((double)posts.Count() / (double)pageSize);
    ViewBag.Page = pagenum;
    ViewBag.TotalPages = totalPages;
    if (posts.Any())
    {
        <div>
            <div class="wiz-topics">
                <div class="d-flex flex-row flex-wrap mb-3 p-2 color-white bg-secondary">
                    <div class="col-8">Topic</div>
                    <div class="col-2">Replies</div>
                    <div class="col-2">Views</div>
                </div>
                <div class="wiz-body m-0 mb-2">
                    @foreach (var post in posts.Skip((pagenum - 1) * pageSize).Take(pageSize)
                    .OrderByDescending(x => x.Value<int>("stickyness"))
                    .ThenByDescending(x => _cacheService.GetPost(x, "Topic_" + x.Id).latestPost))
                    {
                        DisplayPost(post);
                    }
                </div>
            </div>
            @if (totalPages > 1)
            {
                @await Component.InvokeAsync("Navigation",new {Template = "PagerView", Model = Model})
            }
        </div>
    }
    else if (Model.HasValue("postAtRoot") && Model.Value<int?>("postAtRoot") == 1)
    {
        <div>
            <div class="wiz-topics">
                <div class="d-flex flex-row flex-wrap mb-3 p-2 color-white bg-secondary">
                    <div class="col-8">Topic</div>
                    <div class="col-2">Replies</div>
                    <div class="col-2">Views</div>
                </div>
                <div class="wiz-body m-0 mb-2">
                    <div class="d-flex wiz-topic-title col-sm-12">
                        <p>No posts yet, be the first to make one.</p>
                    </div>
                </div>
            </div>
        </div>
    }
}
@{
    void DisplayPost(IPublishedContent post)
    {

        var cacheInfo = _cacheService.GetPost(post, "Topic_" + post.Id);
        var views = _viewCounter.GetViewCount(post.Id)?.Views ?? 0;

        @if (post.IsVisible())
        {
            string locked = post.Value<bool>("allowReplies") ? "" : "locked";
            string solved = post.Value<bool>("answer") ? "solved" : "";

            <div class="d-flex flex-row flex-wrap topic @locked @solved p-6" id="topic-@post.Id">
                <div class="col-8 p-4">
                    <a class="wiz-topic-permalink " href="@post.Url()" style="display: block" title="@post.Value("postTitle")">@post.Value("postTitle")</a>
                    <span class="wiz-topic-meta">

                        @if (!String.IsNullOrWhiteSpace(cacheInfo.lastpostAuthor))
                        {
                            <span class="wiz-topic-started-by">
                                last post&nbsp;by&nbsp;<a href="/profile/?user=@cacheInfo.lastpostAuthor">@cacheInfo.lastpostAuthor</a>
                                @ForumHelper.GetRelativeDate(cacheInfo.latestPost) <a href="@cacheInfo.lastPostUrl" title="Jump to latest post"><i class="bi bi-chevron-double-right"></i></a>
                            </span>
                        }
                        else
                        {
                            <span class="wiz-topic-started-by">topic created by <a href="/profile/?user=@post.Value("postCreator")">@post.Value("postCreator")</a> @ForumHelper.GetRelativeDate(post.CreateDate)</span>
                        }
                    </span>
                </div>
                <div class="col-2 pt-4">@(cacheInfo.Count)</div>
                <div class="col-2 pt-4">@views</div>

            </div>
        }

    }

}

